# .github/workflows/app.yaml
name: Test eBay and Database project
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      db_service:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run test suite
        run: |
          pipenv run test -svvv
        env:
          TEST_DB_HOST: localhost
          TEST_DB_NAME: postgres
          TEST_DB_PASS: postgres
          TEST_DB_PORT: 5432
          TEST_DB_USER: postgres
          APP_ID: ${{ secrets.APP_ID }}
          CERT_ID: ${{ secrets.CERT_ID }}
          DEV_ID: ${{ secrets.DEV_ID }}
          TOKEN: ${{ secrets.TOKEN }}
          API_KEY: ${{ secrets.API_KEY }}
          SECRET: ${{ secrets.SECRET }}
          SHOP_URL: ${{ secrets.SHOP_URL }}
          SHOPIFY_TOKEN: ${{ secrets.SHOPIFY_TOKEN }}

      - name: Run linter
        run: |
          pipenv run lint

      - name: Run formatting
        run: |
          pipenv run format --check
